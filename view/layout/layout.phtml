<?=$this->doctype(); ?>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <?=$this->headTitle('Althingi')->setSeparator(' - ')->setAutoEscape(false);?>

        <?=$this->headMeta()
            ->appendName('viewport', 'width=device-width, initial-scale=1.0')
            ->appendHttpEquiv('X-UA-Compatible', 'IE=edge')
        ?>

        <!-- Scripts -->
        <?php echo $this->headScript()
            ->prependFile($this->basePath('resources/vendor/webcomponentsjs/webcomponents.js'))
        ; ?>
        <script>
            window.Polymer = window.Polymer || {};
            window.Polymer.dom = 'shadow';
        </script>
        <script>
            (function () {

                if (typeof window.Element === "undefined" || "classList" in document.documentElement) return;

                var prototype = Array.prototype,
                    push = prototype.push,
                    splice = prototype.splice,
                    join = prototype.join;

                function DOMTokenList(el) {
                    this.el = el;
                    // The className needs to be trimmed and split on whitespace
                    // to retrieve a list of classes.
                    var classes = el.className.replace(/^\s+|\s+$/g,'').split(/\s+/);
                    for (var i = 0; i < classes.length; i++) {
                        push.call(this, classes[i]);
                    }
                };

                DOMTokenList.prototype = {
                    add: function(token) {
                        if(this.contains(token)) return;
                        push.call(this, token);
                        this.el.className = this.toString();
                    },
                    contains: function(token) {
                        return this.el.className.indexOf(token) != -1;
                    },
                    item: function(index) {
                        return this[index] || null;
                    },
                    remove: function(token) {
                        if (!this.contains(token)) return;
                        for (var i = 0; i < this.length; i++) {
                            if (this[i] == token) break;
                        }
                        splice.call(this, i, 1);
                        this.el.className = this.toString();
                    },
                    toString: function() {
                        return join.call(this, ' ');
                    },
                    toggle: function(token) {
                        if (!this.contains(token)) {
                            this.add(token);
                        } else {
                            this.remove(token);
                        }

                        return this.contains(token);
                    }
                };

                window.DOMTokenList = DOMTokenList;

                function defineElementGetter (obj, prop, getter) {
                    if (Object.defineProperty) {
                        Object.defineProperty(obj, prop,{
                            get : getter
                        });
                    } else {
                        obj.__defineGetter__(prop, getter);
                    }
                }

                defineElementGetter(Element.prototype, 'classList', function () {
                    return new DOMTokenList(this);
                });

            })();
        </script>
        <!-- Le styles -->
        <?=
            $this->headLink([
                'rel' => 'shortcut icon',
                'type' => 'image/vnd.microsoft.icon',
                'href' => $this->basePath('/img/favicon.ico')])
            ; ?>
        <style type="text/css">
            body {
                height: 100vh;
                margin: 0;
            }
        </style>

    </head>
    <body>
        <?php echo $this->content; ?>
        <?php echo $this->inlineScript() ?>
    </body>
</html>
